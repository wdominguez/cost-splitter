{"ast":null,"code":"var _jsxFileName = \"/Users/wdominguez/repositories/personal/grocery-app/components/Item.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Layout = styled.div.withConfig({\n  displayName: \"Item__Layout\",\n  componentId: \"o9h06y-0\"\n})([\"margin:10px 0;\"]);\nconst Checkboxes = styled.div.withConfig({\n  displayName: \"Item__Checkboxes\",\n  componentId: \"o9h06y-1\"\n})([\"display:flex;justify-content:space-around;\"]);\n\nconst Item = props => {\n  const {\n    0: selections,\n    1: setSelections\n  } = useState({});\n  const {\n    0: initialIndivTotals,\n    1: setInitialIndivTotals\n  } = useState({});\n  console.log('initialIndivTotals: ', initialIndivTotals);\n  useEffect(() => {\n    if (Object.keys(initialIndivTotals).length === 0) {\n      setInitialIndivTotals(props.indivTotals);\n    }\n  }, []);\n  useEffect(() => {\n    let newSelections = {};\n    Object.keys(props.indivTotals).forEach(key => newSelections[key] = true);\n    setSelections(newSelections);\n  }, []);\n\n  const handleInputChange = name => {\n    let newSelections = _objectSpread({}, selections);\n\n    newSelections[name] = !selections[name];\n\n    let newIndivTotals = _objectSpread({}, initialIndivTotals);\n\n    const owedPerPerson = props.price / Object.keys(newIndivTotals).length;\n    console.log('owedPerperson: ', owedPerPerson);\n    const selectedCount = Object.values(newSelections).reduce((accumulator, currentValue) => accumulator + currentValue, 0);\n    console.log('selected: ', selectedCount);\n    const unSelectedCount = Object.keys(newSelections).length - selectedCount;\n    console.log('unselected: ', unSelectedCount); //deduct owed per person from each unchecked\n    //split total deducted to add to each person selected\n\n    const addToOthers = owedPerPerson * unSelectedCount / selectedCount;\n    console.log('addtoothers: ', addToOthers);\n    Object.keys(newIndivTotals).forEach(name => {\n      !newSelections[name] ? newIndivTotals[name] -= owedPerPerson : newIndivTotals[name] += addToOthers;\n    });\n    props.setIndivTotals(newIndivTotals);\n    setSelections(newSelections);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => props.onDeletePress(props.id, initialIndivTotals),\n      children: \"X\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      style: {\n        padding: 10\n      },\n      children: [\"$\", props.price, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Checkboxes, {\n      children: Object.keys(props.indivTotals).map(key => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [key, \": \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: selections[key],\n          onChange: () => handleInputChange(key)\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n\nexport default Item;","map":{"version":3,"sources":["/Users/wdominguez/repositories/personal/grocery-app/components/Item.js"],"names":["useState","useEffect","styled","Layout","div","Checkboxes","Item","props","selections","setSelections","initialIndivTotals","setInitialIndivTotals","console","log","Object","keys","length","indivTotals","newSelections","forEach","key","handleInputChange","name","newIndivTotals","owedPerPerson","price","selectedCount","values","reduce","accumulator","currentValue","unSelectedCount","addToOthers","setIndivTotals","onDeletePress","id","padding","map"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react'\nimport styled from 'styled-components'\n\nconst Layout = styled.div`\n  margin: 10px 0;\n`\n\nconst Checkboxes = styled.div`\n  display: flex;\n  justify-content: space-around;\n`\n\nconst Item = (props) => {\n  const [selections, setSelections] = useState({})\n  const [initialIndivTotals, setInitialIndivTotals] = useState({})\n  console.log('initialIndivTotals: ', initialIndivTotals)\n\n  useEffect(() => {\n    if(Object.keys(initialIndivTotals).length === 0) {\n      setInitialIndivTotals(props.indivTotals)\n    }\n  }, [])\n\n  useEffect(() => {\n    let newSelections = {}\n    Object.keys(props.indivTotals).forEach((key) => (newSelections[key] = true))\n    setSelections(newSelections)\n  }, [])\n\n\n  const handleInputChange = (name) => {\n    let newSelections = { ...selections }\n    newSelections[name] = !selections[name]\n\n    let newIndivTotals = { ...initialIndivTotals }\n    const owedPerPerson = props.price / Object.keys(newIndivTotals).length\n    console.log('owedPerperson: ', owedPerPerson)\n    const selectedCount = Object.values(newSelections).reduce(\n      (accumulator, currentValue) => accumulator + currentValue,\n      0,\n    )\n    console.log('selected: ', selectedCount)\n    const unSelectedCount = Object.keys(newSelections).length - selectedCount\n    console.log('unselected: ', unSelectedCount)\n    \n    //deduct owed per person from each unchecked\n    //split total deducted to add to each person selected\n    const addToOthers = (owedPerPerson * unSelectedCount) / selectedCount\n    console.log('addtoothers: ', addToOthers)\n    Object.keys(newIndivTotals).forEach(name => {\n      !newSelections[name] ? \n        newIndivTotals[name] -= owedPerPerson\n      : newIndivTotals[name] += addToOthers\n    })\n    \n    props.setIndivTotals(newIndivTotals)\n    setSelections(newSelections)\n  }\n\n  return (\n    <Layout>\n      <button onClick={() => props.onDeletePress(props.id, initialIndivTotals)}>X</button>\n      <span style={{ padding: 10 }}>${props.price} </span>\n      <Checkboxes>\n        {Object.keys(props.indivTotals).map((key) => (\n          <div>\n            <span>{key}: </span>\n            <input\n              key={key}\n              type='checkbox'\n              checked={selections[key]}\n              onChange={() => handleInputChange(key)}\n            />\n          </div>\n        ))}\n      </Checkboxes>\n    </Layout>\n  )\n}\n\nexport default Item\n"]},"metadata":{},"sourceType":"module"}